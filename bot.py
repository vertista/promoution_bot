# -*- coding: utf-8 -*-
# –≠—Ç–æ—Ç —Ñ–∞–π–ª —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—á–∞–µ—Ç –¢–û–õ–¨–ö–û –∑–∞ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
# –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–±–æ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö.

import os
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)
from tasks import add_task_to_queue

# --- CONFIGURATION ---
load_dotenv()
TOKEN = os.getenv("TOKEN")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")

# --- DATABASE & BOT STATES (–û—Å—Ç–∞—é—Ç—Å—è –¥–ª—è —Å–±–æ—Ä–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤) ---
# ... (–í–µ—Å—å –∫–æ–¥ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥–∏–∞–ª–æ–≥–æ–≤ –æ—Å—Ç–∞–µ—Ç—Å—è –∑–¥–µ—Å—å, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ) ...
# –Ø –µ–≥–æ —Å–∫—Ä—ã–ª –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏, –Ω–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–¥–µ—Å—å.

# --- HANDLERS ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    # ... (–ö–æ–¥ –¥–ª—è /start) ...

async def handle_submission(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message_text = update.message.text
    if not ("tiktok.com" in message_text or "youtube.com" in message_text or "youtu.be" in message_text):
        await update.message.reply_text("‚ùå –ü—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ TikTok –∏ YouTube.")
        return

    # 1. –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.")

    # 2. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è "—Ä–∞–±–æ—á–µ–≥–æ"
    task = {
        "user_id": update.effective_user.id,
        "username": update.effective_user.username or update.effective_user.first_name,
        "video_url": message_text
    }
    add_task_to_queue(task)
    
# ... (–û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: setup_payment, button_handler –∏ —Ç.–¥.) ...

def main() -> None:
    if not all([TOKEN, ADMIN_CHAT_ID]):
        print("‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç TOKEN –∏–ª–∏ ADMIN_CHAT_ID.")
        return

    application = Application.builder().token(TOKEN).build()
    
    # ... (–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤) ...
    
    print("ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()

