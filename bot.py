import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

# --- –í–ê–ñ–ù–û: –î–õ–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê ---
# –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ —Å—Ç—Ä–æ—á–∫–∏ –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
# –ü–æ–∑–∂–µ –º—ã –≤–µ—Ä–Ω–µ–º —ç—Ç–æ –Ω–∞ os.getenv() –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞.
TOKEN = '8432763718:AAG9ch3nk3W-kGcim_rCkMeFoqXz1kcgnC8' 
ADMIN_CHAT_ID = '5613111142'

# --- –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê ---

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    await update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –ü—Ä–∏—Å—ã–ª–∞–π –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∫—Ü–∏–∏."
    )

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def handle_submission(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    message_text = update.message.text
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    admin_message_text = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.mention_html()} (ID: `{user.id}`)\n\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}"
    )

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–û–¥–æ–±—Ä–∏—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f'approve_{user.id}'),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f'decline_{user.id}'),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=admin_message_text,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –µ–≥–æ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    action, user_id_str = query.data.split('_')
    user_id = int(user_id_str)

    if action == 'approve':
        response_text = "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –û–î–û–ë–†–ï–ù–ê."
        await query.edit_message_text(
            text=f"{query.message.text}\n\n--- \n‚úÖ –ó–ê–Ø–í–ö–ê –û–î–û–ë–†–ï–ù–ê",
            parse_mode='HTML'
        )
    else: # action == 'decline'
        response_text = "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –û–¢–ö–õ–û–ù–ï–ù–ê."
        await query.edit_message_text(
            text=f"{query.message.text}\n\n--- \n‚ùå –ó–ê–Ø–í–ö–ê –û–¢–ö–õ–û–ù–ï–ù–ê",
            parse_mode='HTML'
        )

    await context.bot.send_message(chat_id=user_id, text=response_text)

def main() -> None:
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_submission))
    application.add_handler(CallbackQueryHandler(button_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()